#Set the Control+b key as prefix key
set -g prefix C-b
bind-key C-b send-prefix

#Reload the .tmux-conf by pressing the bind key and r
bind-key r source-file ~/.config/tmux/.tmux.conf \; display-message "~/.tmux.conf reloaded"

#Splitting / Creating Panes
bind-key - split-window -v  -c '#{pane_current_path}' 
bind-key \\ split-window -h  -c '#{pane_current_path}'

#Create new window
bind c new-window -c '#{pane_current_path}'

#Breaking a Pane Out to a New Window
bind-key b break-pane -d

#Make window numbering more logical and intuitive
set -g base-index 1
set -g renumber-window on

#Create a binding for choose-tree
bind-key C-j choose-tree

# Use vim keybindings in copy mode
setw -g mode-keys vi
set-option -s set-clipboard off

# Using vim copy and paste style
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'Space' send -X halfpage-down
bind-key -T copy-mode-vi 'Bspace' send -X halfpage-up

## set the default TERM
#set -g default-terminal screen

## update the TERM variable of terminal emulator when creating a new session or attaching a existing session
#set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
## determine if we should enable 256-colour support
#if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

#Using control + vim keys to move around
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

#Open a new pane in the current pane location
bind  c  new-window      -c "#{pane_current_path}"

# easy-to-remember split pane commands
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# moving between windows with vim movement keys
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# resize panes with vim movement keys

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Unbind Toggle last active window
unbind l

# Unbind arrow keys and all movement associated with it
unbind Left
unbind Down
unbind Right
unbind Up

unbind C-Up   
unbind C-Down 
unbind C-Left 
unbind C-Right
